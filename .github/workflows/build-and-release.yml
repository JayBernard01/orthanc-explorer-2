name: build and release
on: 
  push: 
    branches: 
      - '*' 
    tags: 
      - '*'
  pull_request: 
    branches: [ master ]
env: 
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.) 
  BUILD_TYPE: Release
jobs: 
  pre-build: 
    name: pre-build 
    runs-on: "ubuntu-latest" 
    outputs: 
      current_branch_tag: ${{steps.branch_name.outputs.current_branch_tag}} 
      is_tag: ${{steps.branch_name.outputs.is_tag}} 
    steps: 
    - name: Get branch/tag name 
      id: branch_name 
      run: | 
        echo "current_branch_tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT 
        [[ "${GITHUB_REF_TYPE}" == "tag" ]] && echo "is_tag=true" >> $GITHUB_OUTPUT || echo "is_tag=false" >> $GITHUB_OUTPUT
    - name: Echo pre_build 
      run: | 
        echo ${{ steps.branch_name.outputs.is_tag }} ${{ steps.branch_name.outputs.current_branch_tag }} 
        echo ${{ github.ref}}

  build-web-app: 
    name: build-web-app 
    runs-on: "ubuntu-latest" 
    needs: [pre-build] 
    steps: 
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3 
      with: 
        node-version: '19'
    - name: show gitref / tags 
      run: echo ${{ github.ref }} ${{needs.pre-build.outputs.current_branch_tag}} ${{needs.pre-build.outputs.is_tag}}
    - run: npm install 
      working-directory: WebApplication
    - run: npm run build 
      working-directory: WebApplication
    - name: Build and Push Docker Image
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        docker build -t ghcr.io/${REPO_NAME}/oe2-dist-files:latest -f Resources/CreateDistPackage/Dockerfile Resources
        docker push ghcr.io/${REPO_NAME}/oe2-dist-files:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}